name: Deploy

on:
  push:
    branches:
      - main

concurrency:
  group: deploy

env:
  GCP_PROJECT_ID: massive-incline-463501-d5
  IMAGE_NAME: app
  PROJECT_NAME: api-change-notifier
  REGION: us-central1

jobs:
  setup_infrastructure:
    name: Setup infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          TF_VAR_image_name: ${{ env.IMAGE_NAME }}
          TF_VAR_notification_topic: ${{ secrets.NOTIFICATION_TOPIC }}
          TF_VAR_project_id: ${{ env.GCP_PROJECT_ID }}
          TF_VAR_project_name: ${{ env.PROJECT_NAME }}
          TF_VAR_region: ${{ env.REGION }}

  build_and_deploy:
    needs: setup_infrastructure
    name: Build & deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build with Maven
        run: mvn clean package

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - name: Authenticate Docker with Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build -t $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$PROJECT_NAME/$IMAGE_NAME:latest .

      - name: Publish Docker image
        run: |
          docker push $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$PROJECT_NAME/$IMAGE_NAME:latest

      - name: Restart Compute Engine instance
        run: |
          gcloud compute instances reset $PROJECT_NAME --zone=$REGION
